import { c as create_ssr_component } from "../../../chunks/ssr.js";
import "socket.io-client";
const css = {
  code: "hr.svelte-wlw0p{border:rgb(85, 85, 85) 1px solid}p.svelte-wlw0p{margin-top:5px}label.svelte-wlw0p{color:white;margin-top:5px;font-size:18px}input[type='number'].svelte-wlw0p,select.svelte-wlw0p{width:100px;padding:5px 5px;margin:8px 0;box-sizing:border-box;font-family:Cyber, sans-serif;font-weight:700;background-color:#202020;border:none;color:white}button.svelte-wlw0p{all:unset;background:#0ea5e9;color:#111111;padding:0.5rem 1rem;font-weight:700;font-size:18px}button.svelte-wlw0p:hover{background:#0284c7}.connected.svelte-wlw0p{color:green}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { io } from \\"socket.io-client\\";\\nlet clientId;\\nonMount(() => {\\n  const urlParams = new URLSearchParams(window.location.search);\\n  clientId = urlParams.get(\\"id\\");\\n  console.log(clientId);\\n});\\nlet socket;\\nlet isCountdown = false;\\nlet serverConnected = true;\\nlet countdownSeconds = 30;\\nlet duration = 1;\\nlet intensity = 1;\\nlet countdownText = \\"\\";\\nonMount(() => {\\n  socket = io(\\"ws://23.247.168.17:28555\\", { transports: [\\"websocket\\"] });\\n  socket.on(\\"connect\\", () => {\\n    console.log(\\"Connected to server\\");\\n    serverConnected = true;\\n  });\\n  socket.on(\\"authenticated\\", () => {\\n    console.log(\\"Authenticated\\");\\n  });\\n  const randomClientKey = Array.from({ length: 32 }, () => Math.random().toString(36)[2]).join(\\n    \\"\\"\\n  );\\n  const keyElement = document.getElementById(\\"key\\");\\n  if (keyElement) {\\n    keyElement.innerHTML = randomClientKey;\\n  }\\n  const initialMessage = {\\n    id: randomClientKey,\\n    key: \\"88VyeXQRmjjNgTJUijAsxxtSw1mtaDDr\\",\\n    // API\\n    client_type: \\"web\\"\\n  };\\n  socket.emit(\\"authentication\\", initialMessage);\\n});\\nconst vibrate = () => {\\n  let vibrateCommand = {\\n    id: clientId,\\n    command: { action: \\"Vibrate\\", \\"intensity\\": intensity, \\"duration\\": duration }\\n  };\\n  socket.emit(\\"message\\", vibrateCommand);\\n};\\nconst shock = () => {\\n  if (isCountdown) {\\n    let countdown = countdownSeconds;\\n    const interval = setInterval(() => {\\n      countdown--;\\n      countdownText = `Shocking in ${countdown} seconds!`;\\n      let vibrateCommand = {\\n        id: clientId,\\n        command: { action: \\"Vibrate\\", \\"intensity\\": 99, \\"duration\\": 1 }\\n      };\\n      socket.emit(\\"message\\", vibrateCommand);\\n      if (countdown <= 0) {\\n        setTimeout(() => {\\n          let shockCommand = {\\n            id: clientId,\\n            command: { action: \\"Shock\\", \\"intensity\\": intensity, \\"duration\\": duration }\\n          };\\n          socket.emit(\\"message\\", shockCommand);\\n          console.warn(\\"Sending shock command\\");\\n        }, 1500);\\n        clearInterval(interval);\\n        countdownText = \\"\\";\\n      }\\n    }, 1e3);\\n  } else {\\n    let shockCommand = {\\n      id: clientId,\\n      command: { action: \\"Shock\\", \\"intensity\\": intensity, \\"duration\\": duration }\\n    };\\n    socket.emit(\\"message\\", shockCommand);\\n  }\\n};\\n<\/script>\\n\\n<div class=\\"min-h-screen p-5\\">\\n\\t{#if clientId}\\n\\t<h1 class=\\"text-4xl text-cyan-500\\">LynxVR Shock</h1>\\n\\t{#if serverConnected}\\n\\t\\t<p>\\n\\t\\t\\t<span class=\\"connected\\">Connected</span><br />\\n\\t\\t\\tShockers Connected: 1<br />\\n\\t\\t</p>\\n\\t\\t<br />\\n\\n\\t\\t<label>\\n\\t\\t\\tMode :\\n\\t\\t\\t<select>\\n\\t\\t\\t\\t<option value=\\"1\\">Normal</option>\\n\\t\\t\\t\\t<option value=\\"2\\">Intense</option>\\n\\t\\t\\t</select>\\n\\t\\t</label>\\n\\n\\t\\t<br /><br />\\n\\n\\t\\t<label>\\n\\t\\t\\tIntensity 0-200% :\\n\\t\\t\\t<input type=\\"number\\" bind:value={intensity} />\\n\\t\\t</label>\\n\\t\\t<br /><br />\\n\\t\\t<label>\\n\\t\\t\\tDuration in seconds :\\n\\t\\t\\t<input type=\\"number\\" bind:value={duration} />\\n\\t\\t</label>\\n\\t\\t<br /><br />\\n\\n\\t\\t<hr />\\n\\n\\t\\t<br /><br />\\n\\n\\t\\t<!-- Countdown before sending command -->\\n\\t\\t<label>\\n\\t\\t\\t<input type=\\"checkbox\\" bind:checked={isCountdown} />\\n\\t\\t\\tCountdown before sending command (Will vibrate)\\n\\t\\t</label>\\n\\n\\t\\t<br /><br />\\n\\n\\t\\t<label>\\n\\t\\t\\tCountdown time in seconds:\\n\\t\\t\\t<input type=\\"number\\" bind:value={countdownSeconds} />\\n\\t\\t</label>\\n\\n\\t\\t<br /><br />\\n\\n\\t\\t<!-- Display countdown text -->\\n\\t\\t{#if countdownText}\\n\\t\\t\\t<p style=\\"font-size:20px;color:#ef4444;\\">{countdownText}</p>\\n\\t\\t{/if}\\n\\t\\t<br />\\n\\n\\t\\t<button class=\\"btn btn-primary\\" on:click={shock}>Shock</button>\\n\\t\\t<button class=\\"btn btn-primary\\" on:click={vibrate}>Vibrate</button>\\n\\t{:else}\\n\\t\\t<p>Server Not Connected!</p>\\n\\t{/if}\\n\\t{:else}\\n\\t<p class=\\"text-4xl text-cyan-500\\">Access Denied!<br/><span class=\\"text-lg text-white\\">Verify your client ID!</span></p>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\n\\thr {\\n\\t\\tborder: rgb(85, 85, 85) 1px solid;\\n\\t}\\n\\n\\tp {\\n\\t\\tmargin-top: 5px;\\n\\t}\\n\\n\\tlabel {\\n\\t\\tcolor: white;\\n\\t\\tmargin-top: 5px;\\n\\t\\tfont-size: 18px;\\n\\t}\\n\\n\\tinput[type=\'number\'],\\n\\tselect {\\n\\t\\twidth: 100px;\\n\\t\\tpadding: 5px 5px;\\n\\t\\tmargin: 8px 0;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tfont-family: Cyber, sans-serif;\\n\\t\\tfont-weight: 700;\\n\\t\\tbackground-color: #202020;\\n\\t\\tborder: none;\\n\\t\\tcolor: white;\\n\\t}\\n\\n\\tbutton {\\n\\t\\tall: unset;\\n\\t\\tbackground: #0ea5e9;\\n\\t\\tcolor: #111111;\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tfont-size: 18px;\\n\\t}\\n\\n\\tbutton:hover {\\n\\t\\tbackground: #0284c7;\\n\\t}\\n\\n\\t.connected {\\n\\t\\tcolor: green;\\n\\t}\\n\\n\\t.disconnected {\\n\\t\\tcolor: red;\\n\\t}\\n\\n\\t.container {\\n\\t\\tpadding: 3rem;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAoJC,eAAG,CACF,MAAM,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAC7B,CAEA,cAAE,CACD,UAAU,CAAE,GACb,CAEA,kBAAM,CACL,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IACZ,CAEA,KAAK,CAAC,IAAI,CAAC,QAAQ,cAAC,CACpB,mBAAO,CACN,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,KAAK,CAAC,CAAC,UAAU,CAC9B,WAAW,CAAE,GAAG,CAChB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KACR,CAEA,mBAAO,CACN,GAAG,CAAE,KAAK,CACV,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IACZ,CAEA,mBAAM,MAAO,CACZ,UAAU,CAAE,OACb,CAEA,uBAAW,CACV,KAAK,CAAE,KACR"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="min-h-screen p-5">${`<p class="text-4xl text-cyan-500 svelte-wlw0p" data-svelte-h="svelte-2uo03y">Access Denied!<br><span class="text-lg text-white">Verify your client ID!</span></p>`} </div>`;
});
export {
  Page as default
};
